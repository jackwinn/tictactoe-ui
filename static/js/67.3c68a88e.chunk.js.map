{"version":3,"file":"static/js/67.3c68a88e.chunk.js","mappings":"6KAKA,MAkEA,EAlEiBA,KACf,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,iBAAkBC,SAAU,OAAQC,SAAU,UACjFC,EAASC,IAAcL,EAAAA,EAAAA,UAAS,IAEjCM,EAAgBC,IACpBR,EAAQ,IAAKD,EAAM,CAACS,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,OAAQ,EAcvD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,gBAAgBG,SAbfC,UACnBT,EAAEU,iBACF,IACE,MAAMC,QAAiBC,EAAAA,EAAQC,SAAStB,GACxCuB,QAAQC,IAAIJ,GACZb,EAAW,2BACb,CAAE,MAAOkB,GACPlB,EAAW,uBACb,GAKyDQ,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,QAAOX,SAAC,WACvBF,EAAAA,EAAAA,KAAA,SACEc,KAAK,QACLC,GAAG,QACHjB,KAAK,QACLkB,YAAY,QACZjB,MAAOZ,EAAKG,MACZ2B,SAAUtB,EACVuB,UAAQ,KAEVlB,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,WAAUX,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLC,GAAG,WACHjB,KAAK,WACLkB,YAAY,WACZjB,MAAOZ,EAAKI,SACZ0B,SAAUtB,EACVuB,UAAQ,KAEVlB,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,WAAUX,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLC,GAAG,WACHjB,KAAK,WACLkB,YAAY,WACZjB,MAAOZ,EAAKK,SACZyB,SAAUtB,EACVuB,UAAQ,KAGVlB,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQZ,SAAC,YAErBT,IAAWO,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASC,SAAET,KAEpCU,EAAAA,EAAAA,MAAA,KAAGF,UAAU,aAAYC,SAAA,CAAC,6BACCF,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAG,SAAQlB,SAAC,sBAG3C,C,8CCjEV,MA6BA,EA7BWG,UAET,IAME,aALuBgB,EAAAA,EAAQC,IAFrB,YAE8B,CACtCC,QAAS,CACPC,cAAe,UAAUC,QAGbC,IAClB,CAAE,MAAOd,GACP,MAAMA,CACR,GAkBF,EAfiBP,UACf,MACMsB,EAAU,CACdrC,MAAOsC,EAAWtC,MAClBC,SAAUqC,EAAWrC,SACrBC,SAAUoC,EAAWpC,UAEvB,IAEE,aADuB6B,EAAAA,EAAQQ,KAPrB,kBAO+BF,IACzBD,IAClB,CAAE,MAAOd,GACP,MAAMA,CACR,GChBF,GACEkB,GAXSzB,eACc0B,EAAWN,GAWlChB,SAPeJ,eACQ0B,EAAiBH,G","sources":["pages/registrationPage.js","apis/userApi.js","businesses/userBiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/registration.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userBiz from \"../businesses/userBiz\";\r\n\r\nconst Register = () => {\r\n  const [form, setForm] = useState({ email: \"jack@gmail.com\", password: \"1234\", username: \"jack\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await userBiz.register(form);\r\n      console.log(response)\r\n      setMessage(\"Registration successful!\");\r\n    } catch (err) {\r\n      setMessage(\"Registration failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2>Registration</h2>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={form.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Sign Up</button>\r\n\r\n        {message && <p className=\"message\">{message}</p>}\r\n\r\n        <p className=\"login-link\">\r\n          Already have an account? <Link to=\"/login\">Login here</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import baseApi from \"./baseApi\";\r\n\r\nconst me = async (accessToken) => {\r\n  const url = `/users/me`;\r\n  try {\r\n    const response = await baseApi.get(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst register = async (credential) => {\r\n  const url = `/users/register`;\r\n  const payload = {\r\n    email: credential.email,\r\n    password: credential.password,\r\n    username: credential.username,\r\n  };\r\n  try {\r\n    const response = await baseApi.post(url, payload);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default {\r\n  me: me,\r\n  register: register,\r\n};\r\n","import userApi from \"../apis/userApi\";\r\n\r\nconst me = async (accessToken) => {\r\n  const response = await userApi.me(accessToken);\r\n  return response;\r\n};\r\n\r\nconst register = async (credential) => {\r\n  const response = await userApi.register(credential);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  me: me,\r\n  register: register,\r\n};\r\n"],"names":["Register","form","setForm","useState","email","password","username","message","setMessage","handleChange","e","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","response","userBiz","register","console","log","err","htmlFor","type","id","placeholder","onChange","required","Link","to","baseApi","get","headers","Authorization","accessToken","data","payload","credential","post","me","userApi"],"sourceRoot":""}