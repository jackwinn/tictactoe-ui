{"version":3,"file":"static/js/682.fed78c41.chunk.js","mappings":"uLAOA,MA+DA,EA/DkBA,KAChB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,iBACPC,SAAU,UAELC,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpBT,EAAQ,IAAKD,EAAM,CAACU,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,OAAQ,EAoBvD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,aAAaG,SAnBZC,UACnBT,EAAEU,iBACF,IACE,MAAM,YAAEC,SAAsBC,EAAAA,EAAQC,MAAMvB,GAG5C,GAAIqB,EAAa,CACfG,aAAaC,QAAQ,cAAeJ,GACpC,MAAMK,QAAaC,EAAAA,EAAQC,GAAGP,GAC9BG,aAAaC,QAAQ,OAAQI,KAAKC,UAAUJ,IAC5CnB,EAAS,aACX,CACF,CAAE,MAAOwB,GACPzB,EAAS,mCACX,GAKsDU,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,WAC5BF,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,QAAOhB,SAAC,WACvBF,EAAAA,EAAAA,KAAA,SACEmB,KAAK,QACLC,GAAG,QACHtB,KAAK,QACLC,MAAOb,EAAKG,MACZgC,SAAU1B,EACV2B,UAAQ,KAGVtB,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,WAAUhB,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACEmB,KAAK,WACLC,GAAG,WACHtB,KAAK,WACLC,MAAOb,EAAKI,SACZ+B,SAAU1B,EACV2B,UAAQ,KAEVtB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAQjB,SAAC,UACrBX,IAASS,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEX,KAExCY,EAAAA,EAAAA,MAAA,KAAGF,UAAU,gBAAeC,SAAA,CAAC,2BACJF,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACC,GAAG,gBAAetB,SAAC,yBAGhD,C,8CChEV,MA6BA,EA7BWG,UAET,IAME,aALuBoB,EAAAA,EAAQC,IAFrB,YAE8B,CACtCC,QAAS,CACPC,cAAe,UAAUrB,QAGbsB,IAClB,CAAE,MAAOZ,GACP,MAAMA,CACR,GAkBF,EAfiBZ,UACf,MACMyB,EAAU,CACdzC,MAAO0C,EAAW1C,MAClBC,SAAUyC,EAAWzC,SACrB0C,SAAUD,EAAWC,UAEvB,IAEE,aADuBP,EAAAA,EAAQQ,KAPrB,kBAO+BH,IACzBD,IAClB,CAAE,MAAOZ,GACP,MAAMA,CACR,GChBF,GACEH,GAXST,eACc6B,EAAW3B,GAWlC4B,SAPe9B,eACQ6B,EAAiBH,G","sources":["pages/loginPage.js","apis/userApi.js","businesses/userBiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/loginPage.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authBiz from \"../businesses/authBiz\";\r\nimport userBiz from \"../businesses/userBiz\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const [form, setForm] = useState({\r\n    email: \"jack@gmail.com\",\r\n    password: \"1234\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { accessToken } = await authBiz.login(form);\r\n      // console.log(\"Login success:\", accessToken);\r\n\r\n      if (accessToken) {\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        const user = await userBiz.me(accessToken);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        navigate(\"/ticTacToe\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Login failed. Check credentials.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"login-title\">Login</h2>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <p className=\"register-link\">\r\n          Don't have an account? <Link to=\"/registration\">Register here</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import baseApi from \"./baseApi\";\r\n\r\nconst me = async (accessToken) => {\r\n  const url = `/users/me`;\r\n  try {\r\n    const response = await baseApi.get(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst register = async (credential) => {\r\n  const url = `/users/register`;\r\n  const payload = {\r\n    email: credential.email,\r\n    password: credential.password,\r\n    username: credential.username,\r\n  };\r\n  try {\r\n    const response = await baseApi.post(url, payload);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default {\r\n  me: me,\r\n  register: register,\r\n};\r\n","import userApi from \"../apis/userApi\";\r\n\r\nconst me = async (accessToken) => {\r\n  const response = await userApi.me(accessToken);\r\n  return response;\r\n};\r\n\r\nconst register = async (credential) => {\r\n  const response = await userApi.register(credential);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  me: me,\r\n  register: register,\r\n};\r\n"],"names":["LoginPage","form","setForm","useState","email","password","error","setError","navigate","useNavigate","handleChange","e","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","accessToken","authBiz","login","localStorage","setItem","user","userBiz","me","JSON","stringify","err","htmlFor","type","id","onChange","required","Link","to","baseApi","get","headers","Authorization","data","payload","credential","username","post","userApi","register"],"sourceRoot":""}